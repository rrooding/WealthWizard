// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"time"
)

type Money struct {
	Amount   string `json:"amount"`
	Currency string `json:"currency"`
}

type MoneyInput struct {
	Amount   string `json:"amount"`
	Currency string `json:"currency"`
}

type Mutation struct {
}

type NewTransaction struct {
	Isin            string      `json:"ISIN"`
	Broker          string      `json:"Broker"`
	Date            time.Time   `json:"Date"`
	Exchange        string      `json:"Exchange"`
	Amount          int         `json:"Amount"`
	Price           *MoneyInput `json:"Price"`
	TransactionCost *MoneyInput `json:"TransactionCost,omitempty"`
	// If the broker does not supply an ID for the transaction, an ID is generated based on
	// the rest of the data.
	BrokerID *string `json:"BrokerID,omitempty"`
}

type Query struct {
}

type Security struct {
	ID     string `json:"id"`
	Name   string `json:"name"`
	Symbol string `json:"symbol"`
}
