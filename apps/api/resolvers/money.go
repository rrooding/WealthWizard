package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"wealth-wizard/api/graph"
	"wealth-wizard/api/models"

	"github.com/shopspring/decimal"
)

// Amount is the resolver for the amount field.
func (r *moneyResolver) Amount(ctx context.Context, obj *models.Money) (string, error) {
	return obj.Amount.String(), nil
}

// Amount is the resolver for the amount field.
func (r *moneyInputResolver) Amount(ctx context.Context, obj *models.MoneyInput, data string) error {
	if data == "" {
		return nil
	}

	amount, err := decimal.NewFromString(data)
	if err != nil {
		return err
	}

	obj.Amount = amount
	return nil
}

// Money returns graph.MoneyResolver implementation.
func (r *Resolver) Money() graph.MoneyResolver { return &moneyResolver{r} }

// MoneyInput returns graph.MoneyInputResolver implementation.
func (r *Resolver) MoneyInput() graph.MoneyInputResolver { return &moneyInputResolver{r} }

type moneyResolver struct{ *Resolver }
type moneyInputResolver struct{ *Resolver }
